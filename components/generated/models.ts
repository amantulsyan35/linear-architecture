// Code generated by wunderctl. DO NOT EDIT.

import type function_UsersGet from "../../.wundergraph/operations/users/get";
import type { ExtractInput, ExtractResponse } from "@wundergraph/sdk/operations";
import type { OperationErrors } from "./ts-operation-errors";
import type { GraphQLError } from "@wundergraph/sdk/client";

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export type UsersGetInput = ExtractInput<typeof function_UsersGet>;

export interface UsersGetInputInternal {
	id: string;
}

export interface TasksGetTaskDataResponse {
	data?: TasksGetTaskDataResponseData;
	errors?: GraphQLError[];
}

export interface UsersGetUsersResponse {
	data?: UsersGetUsersResponseData;
	errors?: GraphQLError[];
}

export interface UsersGetResponse {
	data?: UsersGetResponseData;
	errors?: GraphQLError[];
}

export interface TasksGetTaskDataResponseData {
	myDB_findManyTeam: {
		id: number;
		name: string;
		members?: {
			id: number;
			name: string;
		}[];
		issues?: {
			id: number;
			name: string;
		}[];
	}[];
	myDB_findManyIssue: {
		id: number;
		name: string;
		team: {
			id: number;
			name: string;
		};
		user: {
			id: number;
			name: string;
		};
	}[];
	myDB_findManyUser: {
		id: number;
		name: string;
		team?: {
			id: number;
			name: string;
		};
		issues?: {
			id: number;
			name: string;
		}[];
	}[];
}

export interface UsersGetUsersResponseData {
	myDB_findManyUser: {
		name: string;
		team?: {
			name: string;
		};
		issues?: {
			userId: number;
		}[];
	}[];
}

export type UsersGetResponseData = ExtractResponse<typeof function_UsersGet>;
